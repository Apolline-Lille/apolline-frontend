{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API REST apolline-frontend",
    "description": "API REST apolline-frontend",
    "termsOfService": "terms",
    "contact": {
      "name": "Arthur Baldeck",
      "url": "https://github.com/Apolline-Lille/apolline-frontend",
      "email": "arthur.baldeck04@gmail.com"
    }
  },
  "schemes": [
    "http"
  ],
  "host": "apolline.lille.inria.fr",
  "basePath": "/",
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/apolline.science": {
      "get": {
        "tags": [
          "apolline.science"
        ],
        "summary": "list of all the pathparam",
        "description": "return the list of all the pathparam",
        "responses": {
          "200": {
            "description": "the pathparam",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "unable to find the path param",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/apolline.science/{pathparam}": {
      "get": {
        "tags": [
          "apolline.science"
        ],
        "summary": "Connect to the database",
        "description": "connect to the database describe by pathparam",
        "operationId": "getDbByPathParam",
        "parameters": [
          {
            "name": "pathparam",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "name of the db"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "pathparam not found"
          },
          "404": {
            "description": "unable to connect to the db"
          }
        }
      }
    },
    "/apolline.science/{pathparam}/data": {
      "get": {
        "tags": [
          "apolline.science"
        ],
        "summary": "the data from the pathparam",
        "description": "get all the data from the pathparam",
        "produces": [
          "text/csv"
        ],
        "parameters": [
          {
            "name": "pathparam",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the name of the database choosen"
          }
        ],
        "responses": {
          "200": {
            "description": "get the data",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "unable to download the data"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Database": {
      "type": "object",
      "properties": {
        "pathparam": {
          "type": "string",
          "description": "the name of the database"
        },
        "tagKeyList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}